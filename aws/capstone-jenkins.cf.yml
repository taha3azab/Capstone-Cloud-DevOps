Description: >
  Capstone project for Cloud DevOps Engineering Nanodegree
  Author - Taha Azab
  CloudFormation file to create EC2 instances.

Parameters:
  EnvironmentName:
    Description: An Environment name that will be prefixed to resources
    Type: String

  ImageID:
    Description: An image ID for EC2 Instance
    Type: String

  KeyPairName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  JenkinsSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to ec2 and SHH access
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-WASG

  JenkinsEc2:
    Type: AWS::EC2::Instance
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          sudo apt-get update -y
          sudo apt-get install default-jdk wget docker.io curl unzip -y
          cd /home/ubuntu
          wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
          sudo sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
          sudo apt-get update -y
          sudo apt-get install jenkins tidy -y
          sudo systemctl status jenkins
          sudo cat /var/lib/jenkins/secrets/initialAdminPassword
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/arm64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin
          sudo usermod -aG docker $USER
          sudo usermod -aG docker jenkins
      SecurityGroupIds:
        - Ref: JenkinsSG
      SubnetId:
        Fn::ImportValue: !Sub "${EnvironmentName}-SUBNET1"
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: "10"
            DeleteOnTermination: true
            VolumeType: "gp2"
      ImageId: !Ref ImageID
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Jenkins

  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"

  EIPAssociation0:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
      - JenkinsEc2
      - EIP
    Properties:
      InstanceId:
        Ref: JenkinsEc2
      AllocationId:
        Fn::GetAtt:
          - EIP
          - AllocationId

Outputs:
  Website:
    Description: The Public DNS for the EC2 Instance
    Value: !Join ["", ["http://", !GetAtt "JenkinsEc2.PublicDnsName", ":8080"]]
